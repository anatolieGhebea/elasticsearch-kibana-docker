version: "2.2"

services:
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: ${NODE_NAME}
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime
      - ${ELASTICSEARCH_DATA}:/usr/share/elasticsearch/data
      - ${ELASTICSEARCH_CONFIG}:/usr/share/elasticsearch/config/extra_config
      - ${ELASTICSEARCH_LOG}:/usr/share/elasticsearch/logs
    # ports:
    #   - ${ES_PORT}:9200
    environment:
      - node.name=${NODE_NAME}
      - cluster.name=${CLUSTER_NAME}
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=false
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    mem_limit: ${MEM_LIMIT}
    
  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: ${KIBANA_NAME}
    restart: unless-stopped

    volumes:
      - /etc/localtime:/etc/localtime
      - ${KIBANA_DATA}:/usr/share/kibana/data
    # ports:
    #   - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=${KIBANA_NAME}
      - ELASTICSEARCH_HOSTS=http://${NODE_NAME}:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}

  nginx:
    image: nginx:latest
    container_name: ${NGINX_NAME}
    restart: unless-stopped
    ports:
      - ${NGINX_PORT}:80
      #- ${NGINX_PORT_SSL}:443
    volumes:
      - /etc/localtime:/etc/localtime
      - ${NGINX_CONFIG}:/etc/nginx/conf.d
      - ${NGINX_LOG}:/var/log/nginx
    networks:
      - elastic_service_lan

networks:
  elastic_service_lan:
    driver: bridge